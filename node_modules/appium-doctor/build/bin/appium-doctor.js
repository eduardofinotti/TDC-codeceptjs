"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("source-map-support/register");

var _yargs = _interopRequireDefault(require("yargs"));

var _factory = _interopRequireDefault(require("../lib/factory"));

var _utils = require("../lib/utils");

var _prompt = require("../lib/prompt");

var _appiumSupport = require("appium-support");

_yargs.default.strict().usage('Usage: $0 [options, defaults: --ios --android]').boolean('ios').describe('ios', 'Check iOS setup').boolean('android').describe('android', 'Check Android setup').boolean('dev').describe('dev', 'Check dev setup').boolean('debug').describe('debug', 'Show debug messages').boolean('yes').describe('yes', 'Always respond yes').boolean('no').describe('no', 'Always respond no').boolean('demo').describe('demo', 'Run appium-doctor demo (for dev).').help('h').alias('h', 'help').check(function (argv) {
  if (!argv.ios && !argv.android && !argv.demo) {
    argv.ios = _appiumSupport.system.isMac();
    argv.android = true;
  }

  return true;
});

let opts = Object.assign({
  general: true
}, _yargs.default.argv);
(0, _prompt.configure)(opts);
(0, _utils.configureBinaryLog)(opts);
(0, _factory.default)(opts).run().catch(function (e) {
  console.error(e);
  process.exit(1);
});require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbi9hcHBpdW0tZG9jdG9yLmpzIl0sIm5hbWVzIjpbInlhcmdzIiwic3RyaWN0IiwidXNhZ2UiLCJib29sZWFuIiwiZGVzY3JpYmUiLCJoZWxwIiwiYWxpYXMiLCJjaGVjayIsImFyZ3YiLCJpb3MiLCJhbmRyb2lkIiwiZGVtbyIsInN5c3RlbSIsImlzTWFjIiwib3B0cyIsIk9iamVjdCIsImFzc2lnbiIsImdlbmVyYWwiLCJydW4iLCJjYXRjaCIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJwcm9jZXNzIiwiZXhpdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0FBLGVBQ0dDLE1BREgsR0FFR0MsS0FGSCxDQUVTLGdEQUZULEVBR0dDLE9BSEgsQ0FHVyxLQUhYLEVBSUdDLFFBSkgsQ0FJWSxLQUpaLEVBSW1CLGlCQUpuQixFQUtHRCxPQUxILENBS1csU0FMWCxFQU1HQyxRQU5ILENBTVksU0FOWixFQU11QixxQkFOdkIsRUFPR0QsT0FQSCxDQU9XLEtBUFgsRUFRR0MsUUFSSCxDQVFZLEtBUlosRUFRbUIsaUJBUm5CLEVBU0dELE9BVEgsQ0FTVyxPQVRYLEVBVUdDLFFBVkgsQ0FVWSxPQVZaLEVBVXFCLHFCQVZyQixFQVdHRCxPQVhILENBV1csS0FYWCxFQVlHQyxRQVpILENBWVksS0FaWixFQVltQixvQkFabkIsRUFhR0QsT0FiSCxDQWFXLElBYlgsRUFjR0MsUUFkSCxDQWNZLElBZFosRUFja0IsbUJBZGxCLEVBZUdELE9BZkgsQ0FlVyxNQWZYLEVBZ0JHQyxRQWhCSCxDQWdCWSxNQWhCWixFQWdCb0IsbUNBaEJwQixFQWlCR0MsSUFqQkgsQ0FpQlEsR0FqQlIsRUFrQkdDLEtBbEJILENBa0JTLEdBbEJULEVBa0JjLE1BbEJkLEVBbUJHQyxLQW5CSCxDQW1CUyxVQUFVQyxJQUFWLEVBQWdCO0FBQ3JCLE1BQUksQ0FBQ0EsSUFBSSxDQUFDQyxHQUFOLElBQWEsQ0FBQ0QsSUFBSSxDQUFDRSxPQUFuQixJQUE4QixDQUFDRixJQUFJLENBQUNHLElBQXhDLEVBQThDO0FBQzVDSCxJQUFBQSxJQUFJLENBQUNDLEdBQUwsR0FBV0csc0JBQU9DLEtBQVAsRUFBWDtBQUNBTCxJQUFBQSxJQUFJLENBQUNFLE9BQUwsR0FBZSxJQUFmO0FBQ0Q7O0FBQ0QsU0FBTyxJQUFQO0FBQ0QsQ0F6Qkg7O0FBNEJBLElBQUlJLElBQUksR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDdkJDLEVBQUFBLE9BQU8sRUFBRTtBQURjLENBQWQsRUFFUmpCLGVBQU1RLElBRkUsQ0FBWDtBQUlBLHVCQUFnQk0sSUFBaEI7QUFDQSwrQkFBbUJBLElBQW5CO0FBQ0Esc0JBQVVBLElBQVYsRUFBZ0JJLEdBQWhCLEdBQXNCQyxLQUF0QixDQUE0QixVQUFVQyxDQUFWLEVBQWE7QUFDdkNDLEVBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjRixDQUFkO0FBQ0FHLEVBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLENBQWI7QUFDRCxDQUhEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1haW5cblxuaW1wb3J0IHlhcmdzIGZyb20gJ3lhcmdzJztcbmltcG9ydCBuZXdEb2N0b3IgZnJvbSAnLi4vbGliL2ZhY3RvcnknO1xuaW1wb3J0IHsgY29uZmlndXJlQmluYXJ5TG9nIH0gZnJvbSAnLi4vbGliL3V0aWxzJztcbmltcG9ydCB7IGNvbmZpZ3VyZSBhcyBjb25maWd1cmVQcm9tcHQgfSBmcm9tICcuLi9saWIvcHJvbXB0JztcbmltcG9ydCB7IHN5c3RlbSB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcblxuXG55YXJnc1xuICAuc3RyaWN0KClcbiAgLnVzYWdlKCdVc2FnZTogJDAgW29wdGlvbnMsIGRlZmF1bHRzOiAtLWlvcyAtLWFuZHJvaWRdJylcbiAgLmJvb2xlYW4oJ2lvcycpXG4gIC5kZXNjcmliZSgnaW9zJywgJ0NoZWNrIGlPUyBzZXR1cCcpXG4gIC5ib29sZWFuKCdhbmRyb2lkJylcbiAgLmRlc2NyaWJlKCdhbmRyb2lkJywgJ0NoZWNrIEFuZHJvaWQgc2V0dXAnKVxuICAuYm9vbGVhbignZGV2JylcbiAgLmRlc2NyaWJlKCdkZXYnLCAnQ2hlY2sgZGV2IHNldHVwJylcbiAgLmJvb2xlYW4oJ2RlYnVnJylcbiAgLmRlc2NyaWJlKCdkZWJ1ZycsICdTaG93IGRlYnVnIG1lc3NhZ2VzJylcbiAgLmJvb2xlYW4oJ3llcycpXG4gIC5kZXNjcmliZSgneWVzJywgJ0Fsd2F5cyByZXNwb25kIHllcycpXG4gIC5ib29sZWFuKCdubycpXG4gIC5kZXNjcmliZSgnbm8nLCAnQWx3YXlzIHJlc3BvbmQgbm8nKVxuICAuYm9vbGVhbignZGVtbycpXG4gIC5kZXNjcmliZSgnZGVtbycsICdSdW4gYXBwaXVtLWRvY3RvciBkZW1vIChmb3IgZGV2KS4nKVxuICAuaGVscCgnaCcpXG4gIC5hbGlhcygnaCcsICdoZWxwJylcbiAgLmNoZWNrKGZ1bmN0aW9uIChhcmd2KSB7XG4gICAgaWYgKCFhcmd2LmlvcyAmJiAhYXJndi5hbmRyb2lkICYmICFhcmd2LmRlbW8pIHtcbiAgICAgIGFyZ3YuaW9zID0gc3lzdGVtLmlzTWFjKCk7XG4gICAgICBhcmd2LmFuZHJvaWQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSk7XG5cbi8vIG1ha2Ugc3VyZSB3ZSB1c2UgdGhlIGdlbmVyYWwgY2hlY2tzIGZvciBldmVyeSB0ZXN0XG5sZXQgb3B0cyA9IE9iamVjdC5hc3NpZ24oe1xuICBnZW5lcmFsOiB0cnVlLFxufSwgeWFyZ3MuYXJndik7XG5cbmNvbmZpZ3VyZVByb21wdChvcHRzKTtcbmNvbmZpZ3VyZUJpbmFyeUxvZyhvcHRzKTtcbm5ld0RvY3RvcihvcHRzKS5ydW4oKS5jYXRjaChmdW5jdGlvbiAoZSkge1xuICBjb25zb2xlLmVycm9yKGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgcHJvY2Vzcy5leGl0KDEpO1xufSk7XG4iXSwiZmlsZSI6ImJpbi9hcHBpdW0tZG9jdG9yLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uIn0=
